// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    Mux(a=a[0], b=b[0], sel=sel[0], out=mux00);
    Mux(a=c[0], b=d[0], sel=sel[0], out=mux01);
    Mux(a=mux00, b=mux01, sel=sel[1], out=out[0]);

    Mux(a=a[1], b=b[1], sel=sel[0], out=mux10);
    Mux(a=c[1], b=d[1], sel=sel[0], out=mux11);
    Mux(a=mux10, b=mux11, sel=sel[1], out=out[1]);

    Mux(a=a[2], b=b[2], sel=sel[0], out=mux20);
    Mux(a=c[2], b=d[2], sel=sel[0], out=mux21);
    Mux(a=mux20, b=mux21, sel=sel[1], out=out[2]);

    Mux(a=a[3], b=b[3], sel=sel[0], out=mux30);
    Mux(a=c[3], b=d[3], sel=sel[0], out=mux31);
    Mux(a=mux30, b=mux31, sel=sel[1], out=out[3]);

    Mux(a=a[4], b=b[4], sel=sel[0], out=mux40);
    Mux(a=c[4], b=d[4], sel=sel[0], out=mux41);
    Mux(a=mux40, b=mux41, sel=sel[1], out=out[4]);

    Mux(a=a[5], b=b[5], sel=sel[0], out=mux50);
    Mux(a=c[5], b=d[5], sel=sel[0], out=mux51);
    Mux(a=mux50, b=mux51, sel=sel[1], out=out[5]);

    Mux(a=a[6], b=b[6], sel=sel[0], out=mux60);
    Mux(a=c[6], b=d[6], sel=sel[0], out=mux61);
    Mux(a=mux60, b=mux61, sel=sel[1], out=out[6]);

    Mux(a=a[7], b=b[7], sel=sel[0], out=mux70);
    Mux(a=c[7], b=d[7], sel=sel[0], out=mux71);
    Mux(a=mux70, b=mux71, sel=sel[1], out=out[7]);

    Mux(a=a[8], b=b[8], sel=sel[0], out=mux80);
    Mux(a=c[8], b=d[8], sel=sel[0], out=mux81);
    Mux(a=mux80, b=mux81, sel=sel[1], out=out[8]);

    Mux(a=a[9], b=b[9], sel=sel[0], out=mux90);
    Mux(a=c[9], b=d[9], sel=sel[0], out=mux91);
    Mux(a=mux90, b=mux91, sel=sel[1], out=out[9]);

    Mux(a=a[10], b=b[10], sel=sel[0], out=mux100);
    Mux(a=c[10], b=d[10], sel=sel[0], out=mux101);
    Mux(a=mux100, b=mux101, sel=sel[1], out=out[10]);

    Mux(a=a[11], b=b[11], sel=sel[0], out=mux110);
    Mux(a=c[11], b=d[11], sel=sel[0], out=mux111);
    Mux(a=mux110, b=mux111, sel=sel[1], out=out[11]);

    Mux(a=a[12], b=b[12], sel=sel[0], out=mux120);
    Mux(a=c[12], b=d[12], sel=sel[0], out=mux121);
    Mux(a=mux120, b=mux121, sel=sel[1], out=out[12]);

    Mux(a=a[13], b=b[13], sel=sel[0], out=mux130);
    Mux(a=c[13], b=d[13], sel=sel[0], out=mux131);
    Mux(a=mux130, b=mux131, sel=sel[1], out=out[13]);

    Mux(a=a[14], b=b[14], sel=sel[0], out=mux140);
    Mux(a=c[14], b=d[14], sel=sel[0], out=mux141);
    Mux(a=mux140, b=mux141, sel=sel[1], out=out[14]);

    Mux(a=a[15], b=b[15], sel=sel[0], out=mux150);
    Mux(a=c[15], b=d[15], sel=sel[0], out=mux151);
    Mux(a=mux150, b=mux151, sel=sel[1], out=out[15]);
}